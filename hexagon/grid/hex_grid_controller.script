local hexagon_geometry = require("hexagon.resources.hex_geometry")

function init(self)
	self.tiles = {}
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

local message_functions = 
{
	["set_tiles"] = function (self,message)
		local size = message.tiles[1];
		for i = 2,#message.tiles,1 do
			local tile = message.tiles[i]
			local pos = hexagon_geometry.cube_to_axial(hexagon_geometry.pixel_to_hex(go.get_position(tile), size))
			if self.tiles[pos.x] == nil then
				self.tiles[pos.x] = {}
			end
			self.tiles[pos.x][pos.y] = tile
		end
	end,
	["set_tile_color"] = function (self, message)
		local pos = hexagon_geometry.cube_to_axial(message.position)
		local tile = self.tiles[pos.x][pos.y]
		local tile_sprite_url = msg.url(nil,tile,"sprite")
		go.set(tile_sprite_url, "tint", message.color)
	end
}

function on_message(self, message_id, message, sender)
	for key, value in pairs(message_functions) do
		if message_id == hash(key) then
			message_functions[key](self,message)
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
