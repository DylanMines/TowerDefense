DEBUG_MODE = false --if set to true debug logs will be printed to console and fps will be displayed
function init(self)
	self.debounce = false

	if not DEBUG_MODE then
		--label.set_text("")
	end
end

local function update_fps_counter(self, dt) 
	if self.debounce == true then
		local fps = (math.floor((10/dt)+0.5))/10
		label.set_text("/debug_fps#counter", "FPS: "..fps)
		self.debounce = false
	else
		self.debounce = true
	end
end

function update(self, dt)
	if DEBUG_MODE then
		update_fps_counter()
	end
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("debug_print") then
		if DEBUG_MODE == true then
			print(message.log);
		end
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
